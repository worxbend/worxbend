name: Docker Image of `poetry-builder`

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy-poetry-builder:
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3
      - id: changes
        uses: dorny/paths-filter@v2
        name: Detect changes in Dockerfile of 'poetry-builder'
        with:
          filters: |
            poetry-builder:
              - 'docker/poetry-builder/**'
      - id: notify-committed
        name: Notify me (commit)
        if: ${{ steps.changes.outputs.poetry-builder == 'true' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_NOTIFY_CHAT }}
          token: ${{ secrets.TELEGRAM_NOTIFY_TOKEN }}
          message: |
            #notifications
            🧟 ${{ github.actor }} created commit:
            ✒ Commit message: ${{ github.event.commits[0].message }}
            🗃 Repository: ${{ github.repository }}, Dockerfile: poetry-builder
            📊 See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
      - name: Login to Docker Hub
        if: ${{ steps.changes.outputs.poetry-builder == 'true' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - id: setup-qume
        if: ${{ steps.changes.outputs.poetry-builder == 'true' }}
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - id: setup-builder
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
      - id: print-builder-info
        name: Print Builder Name
        if: ${{ steps.changes.outputs.poetry-builder == 'true' }}
        run: echo ${{ steps.setup-builder.outputs.name }}
      - id: build
        if: ${{ steps.changes.outputs.poetry-builder == 'true' }}
        name: Build
        uses: docker/build-push-action@v3
        with:
          no-cache: true
          platforms: linux/amd64,linux/arm64/v8
          context: ./docker/poetry-builder
          push: true
          tags: limpidkzonix/poetry-builder:latest
      - id: notify-published
        name: Notify me (image update)
        if: ${{ steps.changes.outputs.poetry-builder == 'true' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_NOTIFY_CHAT }}
          token: ${{ secrets.TELEGRAM_NOTIFY_TOKEN }}
          message: |
            #notifications
            🚀 New image tag published!
            🐋 Image ID: ${{ steps.build.outputs.imageid }}
            🔢 Image digest : ${{ steps.build.outputs.digest }}
            🐋 See changes: https://hub.docker.com/r/limpidkzonix/poetry-builder/tags
      - id: print-image-info
        name: Print Image Name
        if: ${{ steps.changes.outputs.poetry-builder == 'true' }}
        run: |
          echo "Image ID: ${{ steps.build.outputs.imageid }} 
          echo "Image digest : ${{ steps.build.outputs.digest }}


  notify-job:
    runs-on: ubuntu-20.04
    needs: [ build-and-deploy-poetry-builder ]
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    steps:
      - id: notify-error
        name: Notify on error (build)
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_NOTIFY_CHAT }}
          token: ${{ secrets.TELEGRAM_NOTIFY_TOKEN }}
          message: |
            #notifications
            ❌ Failed to build `poetry-builder` image!