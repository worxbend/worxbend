version = "3.7.4"

align {
  stripMargin = yes
  preset = most
  multiline = true
  stripMargin = true
  arrowEnumeratorGenerator = true
  openParenCallSite = false
  openParenDefnSite = true
  openBracketDefnSite = true
}

align.tokens."+" = [{
  code = ":"
  owners = [{
    regex = "Term\\.Param"
    parents = ["Ctor\\.Primary"]
  }]
}]

align.arrowEnumeratorGenerator = true

assumeStandardLibraryStripMargin = no

danglingParentheses {
  exclude = []
  defnSite = true
  ctrlSite = false
  callSite = false
  tupleSite = false
}

docstrings {
  forceBlankLineBefore = no
  oneline = keep
  style = SpaceAsterisk
  wrap = no
}

fileOverride {
  "glob:**/*.sbt" {
    newlines {
      topLevelStatementBlankLines = [
        {
          blanks {
            afterAll = -1,
          }

          minBreaks = 0
        }
      ]
    }

    runner {
      # https://scalameta.org/scalafmt/docs/configuration.html#scala-dialects
      dialect = Scala212
    }
  }

  "glob:**/project/*.scala" {
    newlines {
      topLevelStatementBlankLines = [
        {
          blanks {
            afterAll = -1,
          }

          minBreaks = 0
        }
      ]
    }

    runner {
      # https://scalameta.org/scalafmt/docs/configuration.html#scala-dialects
      dialect = Scala212
    }
  }
}

includeNoParensInSelectChains = yes

indent {
  ctrlSite = 4
  caseSite = 5
  withSiteRelativeToExtends = 3
  commaSiteRelativeToExtends = 8
}

indentOperator {
  exemptScope = all
}

lineEndings = preserve

maxColumn = 100

newlines {
  topLevelBodyIfMinStatements = [before, after]
  alwaysBeforeElseAfterCurlyIf = true
  topLevelStatements = [before, after]
  topLevelStatementsMinBreaks = 2
  beforeCurlyLambdaParams = multilineWithCaseOnly
  forceBeforeMultilineAssign = def
  beforeMultiline = unfold
  alwaysBeforeElseAfterCurlyIf = yes
  avoidInResultType = yes
  avoidForSimpleOverflow = [slc]
  beforeCurlyLambdaParams = multilineWithCaseOnly
  implicitParamListModifierForce = [after]
  inInterpolation = avoid
  penalizeSingleSelectMultiArgList = true
  beforeOpenParenDefnSite = null
  beforeOpenParenCallSite = null

  topLevelStatementBlankLines = [
    {
      blanks {
        beforeAll = -1,
        afterAll = -1,
        beforeEndMarker = -1
      }

      minBreaks = 0
    },
    {
      blanks {
        beforeAll = -1,
        before = 1,
        after = 1,
        afterAll = -1,
        beforeEndMarker = -1
      }

      minBreaks = 0
    }
  ]
}

project {
  excludeFilters = [
    ".metals"
  ]
}

rewrite {
  trailingCommas.style = multiple
  redundantBraces {
    ifElseExpressions = yes
    stringInterpolation = true
    generalExpressions = true
    ifElseExpressions = true
    methodBodies = true
    includeUnitMethods = true
    parensForOneLineApply = true
  }

  rules = [
    PreferCurlyFors
    SortModifiers,
    AvoidInfix,
    RedundantParens,
    RedundantBraces,
    Imports
  ]

  imports {
    expand = true
    sort = scalastyle
    groups = [
      ["io\\.kzonix\\..*"],
      ["com\\.worxbend\\..*"],
      ["zio\\..*"],
      ["io\\..*"],
      ["izumi\\..*"],
      ["scala\\..*"],
      ["java\\..*"],
      ["io\\.netty\\..*"],
      ["com\\.sun\\..*"],
    ]
  }

  sortModifiers.order = [
    implicit
    final
    sealed
    abstract
    override
    private
    protected
    lazy
    open
    transparent
    inline
    infix
    opaque
    inline
    infix
  ]
  neverInfix.excludeFilters = [
    until
    to
    by
    eq
    ne
    "should.*"
    "contain.*"
    "must.*"
    in
    ignore
    be
    taggedAs
    thrownBy
    synchronized
    have
    when
    size
    only
    noneOf
    oneElementOf
    noElementsOf
    atLeastOneElementOf
    atMostOneElementOf
    allElementsOf
    inOrderElementsOf
    theSameElementsAs
  ]

}

rewriteTokens {
  "⇒" = "=>"
  "→" = "->"
  "←" = "<-"
}

runner {
  # https://scalameta.org/scalafmt/docs/configuration.html#scala-dialects
  dialect = scala3
}

spaces {
  inImportCurlyBraces = yes
}

trailingCommas = multiple

verticalMultiline {
  arityThreshold = 3
  atDefnSite = yes
  newlineAfterOpenParen = yes
}

assumeStandardLibraryStripMargin = false

optIn.configStyleArguments = true
runner.optimizer.forceConfigStyleOnOffset = 6
runner.optimizer.forceConfigStyleMinArgCount = 3

docstrings.style = SpaceAsterisk
docstrings.oneline = fold
docstrings.wrap = yes
maxColumn = 120

spaces.inImportCurlyBraces = true
spaces.beforeContextBoundColon = IfMultipleBounds
spaces.inInterpolatedStringCurlyBraces = true

project.git = true
project.includeFilters = [
  ".*\\.scala$"
  ".*\\.sbt$"
  ".*\\.sc$"
]

literals.long = Upper
literals.float = Lower
literals.double = Lower
literals.hexDigits = Lower
literals.hexPrefix = Lower
literals.scientific = Lower
