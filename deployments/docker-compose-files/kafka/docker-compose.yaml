version: '3'

services:
  kafka-0:
    image: confluentinc/cp-kafka:latest
    networks:
      - kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_KRAFT_CLUSTER_ID: kafka
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-0:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka-0:29092,CONTROLLER://kafka-0:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-0:29092,PLAINTEXT_HOST://$KAFKA_ADVERTISED_IP:9092

      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_TOPIC: __transaction_state
      KAFKA_TRANSACTION_STATE_LOG_LOAD_BUFFER_SIZE: 5242880
      KAFKA_TRANSACTION_STATE_LOG_MIN_CLEANUP_INTERVAL_MS: 60000
      KAFKA_TRANSACTION_STATE_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_TRANSACTION_STATE_LOG_CLEANUP_POLICY: delete
      KAFKA_TRANSACTION_STATE_LOG_RETENTION_MS: 86400000
      KAFKA_LOG_MESSAGE_FORMAT_VERSION: '2.8'
      KAFKA_ENABLE_IDEMPOTENCE: 'true'
      KAFKA_TRANSACTION_STATE_LOG_ENABLED: 'true'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_TRANSACTION_STATE_LOG_NUM_PARTITIONS: 50
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_ASSIGNMENT_STRATEGY: org.apache.kafka.common.replica.RoundRobinPartitionAssignor
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_BROKER_ENABLE_PLAINTEXT: 'true'
    ports:
      - '9092:9092'
      - '29092:29092'
      - '29093:29093'
      - '9101:9101'
    volumes:
      - kafka-0:/var/lib/kafka/data
      - ./kraft-start.sh:/tmp/kraft-start.sh
    command: "bash -c 'if [ ! -f /tmp/kraft-start.sh ]; then echo \"ERROR: Did you forget the update_run.sh file that came with this docker-compose.yml file?\" && exit 1 ; else /tmp/kraft-start.sh && /etc/confluent/docker/run ; fi'"

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka-0
    ports:
      - "8081:8081"
    networks:
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-0:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.3.0
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - kafka-0
      - schema-registry
    ports:
      - "8088:8088"
    networks:
      - kafka
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: "kafka-0:29092"
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'


  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.3.0
    depends_on:
      - kafka-0
      - schema-registry
    ports:
      - "8082:8082"
    networks:
      - kafka
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka-0:29092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'




volumes:
  kafka-0:
    driver: local
    driver_opts:
      type: "bind"
      o: bind
      device: $PWD/.volumes/kafka-0
  kafka-1:
    driver: local
    driver_opts:
      type: "bind"
      o: bind
      device: $PWD/.volumes/kafka-1
networks:
  kafka:

